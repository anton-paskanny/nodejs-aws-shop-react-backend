openapi: 3.0.3
info:
  title: Product Service API
  description: This service serves products.
  version: 1.0.0

servers:
  - url: https://gyc0omak64.execute-api.eu-west-1.amazonaws.com/prod

paths:
  /products:
    get:
      summary: Get the list of products
      operationId: getProductsList
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWithData'
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        description: Product object that needs to be added
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductBody'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  productId:
                    type: string
                  count:
                    type: integer
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWithDetails'
        '409':
          description: Product with the same title already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error creating product and stock
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWithData'

  /products/{productId}:
    get:
      summary: Get a product by ID
      operationId: getProductsById
      parameters:
        - name: productId
          in: path
          required: true
          description: ID of the product to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorWithData'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        count:
          type: number
          format: integer
    CreateProductBody:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        count:
          type: number
          format: integer
    Error:
      type: object
      properties:
        error:
          type: string
    ErrorWithData:
      type: object
      properties:
        message:
          type: string
        data:
          type: object
    ErrorWithDetails:
      type: object
      properties:
        message:
          type: string
        data:
          type: array
          items:
            type: string
